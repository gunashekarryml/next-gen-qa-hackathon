name: CI | Enrich + Playwright + Triage Dashboard

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  TEST_DATA_OUT: playwright-tests/test-data/TestData.enriched.jsonl

jobs:
  build-test-enrich:
    name: Enrich + Playwright Test + Allure
    runs-on: ubuntu-latest
    outputs:
      ALLURE_REPORT_DIR: ${{ steps.set-allure-path.outputs.allure-path }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node + NPM Cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers (Chromium only)
        working-directory: playwright-tests
        run: npx playwright install chromium

      - name: Enrich Test Failures & Validate
        run: npm run enrich

      - name: Run Playwright Tests + Generate Allure Results
        working-directory: playwright-tests
        run: npm run test || true

      # ------------------ Allure ------------------
      - name: Install Allure CLI
        run: npm install -g allure-commandline

      - name: Generate Allure Report
        id: generate-allure
        run: npx allure generate playwright-tests/allure-results --clean -o playwright-tests/allure-report

      - name: Upload Allure Report Artifact
        id: upload-allure
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: playwright-tests/allure-report

      - name: Set Allure report path output
        id: set-allure-path
        run: echo "allure-path=playwright-tests/allure-report" >> $GITHUB_OUTPUT

      - name: Upload Enriched JSON Artifact
        uses: actions/upload-artifact@v4
        with:
          name: enriched-testdata
          path: ${{ env.TEST_DATA_OUT }}

  deploy-dashboard:
    name: ðŸš€ Deploy Dashboard + Allure + Notifications
    runs-on: ubuntu-latest
    needs: build-test-enrich

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Enriched Data
        uses: actions/download-artifact@v4
        with:
          name: enriched-testdata
          path: playwright-tests/test-data/

      - name: Install Dashboard Dependencies
        working-directory: triage-dashboard
        run: npm ci

      - name: Copy Enriched JSON to Dashboard Public Folder
        run: |
          mkdir -p triage-dashboard/public
          cp playwright-tests/test-data/TestData.enriched.jsonl triage-dashboard/public/

      - name: Build Dashboard
        working-directory: triage-dashboard
        run: npm run build

      # ------------------ Deploy ------------------
      # Dashboard deployment
      - name: Deploy Dashboard to gh-pages/dashboard
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_PAGES_TOKEN }}
          publish_dir: triage-dashboard/build
          publish_branch: gh-pages
          destination_dir: dashboard    # <-- subfolder for dashboard
          force_orphan: false           # <-- preserves other content
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"

      # Allure deployment
      - name: Deploy Allure Report to gh-pages/allure
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_PAGES_TOKEN }}
          publish_dir: playwright-tests/allure-report
          publish_branch: gh-pages
          destination_dir: allure      # <-- subfolder for allure
          force_orphan: false
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"

      # ------------------- Notifications -------------------
      - name: Install Slack + Email dependencies
        run: npm install @slack/web-api yargs

      - name: Create Slack & Email Summary
        if: always()
        run: >
          node triage-dashboard/create-summary.js
            --allureDir="${{ needs.build-test-enrich.outputs.ALLURE_REPORT_DIR }}"
            --dashboardUrl="https://gunashekarryml.github.io/team2-qa-hackathon/dashboard/"
            --allureUrl="https://gunashekarryml.github.io/team2-qa-hackathon/allure/"
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_RECEPIENTS: ${{ secrets.EMAIL_RECEPIENTS }}

      - name: Set Email Subject with Date
        id: set-email-subject
        run: |
          echo "email_subject=Web Automation & Dashboard Deployment - $(date '+%d-%b-%Y')" >> $GITHUB_ENV

      - name: Send Email Notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: ${{ env.email_subject }}
          to: ${{ secrets.EMAIL_RECEPIENTS }}
          from: ${{ secrets.EMAIL_USERNAME }}
          body: ${{ env.email_body }}
